name: 'Preare Quickbyte Transfer desktop app dependencies and config'

on:
  workflow_call:
    inputs:
        server_base_url:
            required: true
            type: string
        app_name:
            required: true
            type: string
        bundle_identifier:
            required: true
            type: string
        should_release:
            required: true
            type: boolean
        create_artifacts:
            type: boolean
            required: true
        release_prefix:
            type: string
        prerelease:
            type: boolean

    secrets:
        google_client_id:
            required: true
        google_client_secret:
            required: true
        release_github_token:
            required: true
        tauri_private_key:
            required: false
        tauri_private_key_password:
            required: false

defaults:
  run:
    shell: bash
    working-directory: desktop/gui
jobs:
  build-app:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
            name: 'macos-arm'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
            name: 'macos-intel'
          # we don't yet support Linux
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            # args: ''
          - platform: 'windows-latest'
            args: ''
            name: 'windows'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: 'desktop/gui/src-tauri -> target'

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: cd ../.. && npm install --workspaces
        
      - name: generate config override
        run: |
          echo "{
            \"package\": {
              \"productName\":\"${{ inputs.app_name }}\"
            },
            \"tauri\": {
              \"bundle\": {
                \"identifier\":\"${{ inputs.bundle_identifier }}\"
              }
            }
          }" > config_override.json && cat config_override.json
      
      # generate ad-hoc .env file because the tauri action
      # does not appear to use the custom env vars passed to
      # it directly
      - name: generate .env config
        run: |
          echo "
          GOOGLE_CLIENT_ID=${{ secrets.google_client_id }}
          GOOGLE_CLIENT_SECRET=${{ secrets.google_client_secret }}
          SERVER_BASE_URL=${{ inputs.server_base_url }}
          " > src-tauri/.env && cat src-tauri/.env

        # env:
        #   GOOGLE_CLIENT_ID: ${{ vars.STAGING_GOOGLE_CLIENT_ID }}
        #   GOOGLE_CLIENT_SECRET: ${{ vars.STAGING_GOOGLE_CLIENT_SECRET }}
        #   SERVER_BASE_URL: 'https://quickbyte-staging.up.railway.app'

      # see: https://github.com/tauri-apps/tauri-action
      - name: build app bundles
        if: ${{ !inputs.should_release }}
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   GOOGLE_CLIENT_ID: ${{ vars.STAGING_GOOGLE_CLIENT_ID }}
        #   GOOGLE_CLIENT_SECRET: ${{ vars.STAGING_GOOGLE_CLIENT_SECRET }}
        #   SERVER_BASE_URL: 'https://quickbyte-staging.up.railway.app'
        with:
          projectPath: desktop/gui
          args: '${{ matrix.args }} --config config_override.json'

      - name: release app bundles
        if: ${{ inputs.should_release }}
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.release_github_token }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.tauri_private_key }}
          TAURI_PRIVATE_KEY_PASSWORD: ${{ secrets.tauri_private_key_password }}
        #   GOOGLE_CLIENT_ID: ${{ vars.STAGING_GOOGLE_CLIENT_ID }}
        #   GOOGLE_CLIENT_SECRET: ${{ vars.STAGING_GOOGLE_CLIENT_SECRET }}
        #   SERVER_BASE_URL: 'https://quickbyte-staging.up.railway.app'
        with:
          projectPath: desktop/gui
          args: '${{ matrix.args }} --config config_override.json'
          owner: 'habbes'
          releaseCommitish: main
          repo: 'quickbyte-releases'
          tagName: 'transfer-${{ inputs.release_prefix }}v__VERSION__'
          releaseName: '${{ inputs.app_name}} __VERSION__'
          releaseDraft: true
          prerelease: ${{ inputs.prerelease }}
      
      - name: upload bundle artifacts
        if: ${{ inputs.create_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle-${{matrix.name}}
          path: desktop/gui/src-tauri/target