[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.3", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.7.0", features = [ "shell-open", "dialog-message", "path-all", "dialog-save", "dialog-open", "notification" ] }
azure_storage_blobs = "0.20.0"
azure_core = "0.5.0"
azure_storage = "0.20.0"
futures = "0.3.30"
url = "2.5.2"
tokio = { version = "1", features = ["full"] }
base64 = "0.22.1"
diesel = { version = "2.2.0", features = ["sqlite", "returning_clauses_for_sqlite_3_35"] }
diesel_migrations = "2.2.0"
libsqlite3-sys = { version = "0.30.1", features = ["bundled"] }
chrono = "0.4.31"
directories = "5.0.1"
uuid = "1.10.0"
oauth2 = "4.4.2"
axum = "0.7.5"
reqwest = { version = "0.12.7", features = ["json"] }
open = "5.3.0"
keyring = { version = "3", features = ["apple-native", "windows-native"] }
tauri-plugin-context-menu = "0.8.2"
showfile = "0.1.1"
thiserror = "1.0.64"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
